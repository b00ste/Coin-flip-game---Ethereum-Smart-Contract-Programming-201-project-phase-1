{
  "contractName": "Flip",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "name": "wol",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "playerNum",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "waiting",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "selfDestruct",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "name": "coinFlip",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "toWithdraw",
          "type": "uint256"
        }
      ],
      "name": "takeMoney",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"wol\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"coinFlip\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"playerNum\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiting\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"selfDestruct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toWithdraw\",\"type\":\"uint256\"}],\"name\":\"takeMoney\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"update\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/Flip.sol\":\"Flip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/Destroyable.sol\":{\"keccak256\":\"0x94617c0b7f0c129f5ea5ceab1162ca6ac1f1c35d192818af0e52a8951a13bf5e\",\"urls\":[\"bzz-raw://6452ecdd5bfc082b45b23e04e9311b2d140c8bbd0d2231f87e0c74d7d2539fcd\",\"dweb:/ipfs/QmUR7C85Ek1M8i78Mx8hfjCDtpyiuXMwhZopoWd4WfFdcL\"]},\"/C/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/Flip.sol\":{\"keccak256\":\"0x1e8b0a62d2f273eb9d17473a4327705caaa0bfa7c7a371e558886ade2ab9f52d\",\"urls\":[\"bzz-raw://38f98dc468cc8cc144870eb01863480a2a3e40113df71eb6fe38653bcf1baa9f\",\"dweb:/ipfs/QmVR23gX1goHbmTQhsCASDAYmgdY1kL3bLmFgXjRMMD634\"]},\"/C/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/Ownable.sol\":{\"keccak256\":\"0x662ef2d296c8cf4c560a540c5482276731398d6bd241672a5d3ba5c716f4ae92\",\"urls\":[\"bzz-raw://b526aaa5112d627085d4451b35994e6e30cb220f99a4e426b34df647650324a4\",\"dweb:/ipfs/QmYpzhVF4HQzxpxok7aMvKwTzmEN9LWjZ6zDwHv7tgEUka\"]},\"/C/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/provableAPI_0.5.sol\":{\"keccak256\":\"0x83ae27f1c335d558de39f76aae3429a93932ae89721aef46e4f5e659f58e1a58\",\"urls\":[\"bzz-raw://468683a05b39bd6a434167516f237c50c9142a534f3bc25975ae8595732607d0\",\"dweb:/ipfs/QmWBmiTo1ws6z2bNZC9U7JYjwyrVky4P9L1WoToyPSj45s\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000626200006860201b60201c565b62001fbc565b6000809050600062030d40905060006200008b836001846200010560201b60201c565b905080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016008600083815260200190815260200160002060010160006101000a81548160ff021916908315150217905550505050565b6000808311801562000118575060208311155b6200012257600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156200015f5781602001600182028038833980820191505090505b5090508360f81b816000815181106200017457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015620001da5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015620002145781602001600182028038833980820191505090505b509050600062000229620006d860201b60201c565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f1916602001820160405280156200027e5781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015620002be5781602001600182028038833980820191505090505b509050620002d9826018600884600062000a1460201b60201c565b50620002e462001ecb565b60405180608001604052808781526020018881526020018681526020018481525090506000620003516040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c62000a7660201b60201c565b9050606060086040519080825280601f01601f1916602001820160405280156200038a5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350620006c5828285600160048110620004cb57fe5b6020020151600287600060048110620004e057fe5b60200201516040518082805190602001908083835b602083106200051a5780518252602082019150602081019050602083039250620004f5565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156200055d573d6000803e3d6000fd5b5050506040513d60208110156200057357600080fd5b8101908080519060200190929190505050876002600481106200059257fe5b60200201516040516020018085805190602001908083835b60208310620005cf5780518252602082019150602081019050602083039250620005aa565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310620006225780518252602082019150602081019050602083039250620005fd565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b602083106200067b578051825260208201915060208101905060208303925062000656565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040528051906020012062000e1060201b60201c565b8199505050505050505050509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620007695750600062000767600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000e2c60201b60201c565b145b15620007835762000781600062000e3760201b60201c565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015620007ee57600080fd5b505af115801562000803573d6000803e3d6000fd5b505050506040513d60208110156200081a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200096957600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015620008eb57600080fd5b505af115801562000900573d6000803e3d6000fd5b505050506040513d60208110156200091757600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015620009d257600080fd5b505afa158015620009e7573d6000803e3d6000fd5b505050506040513d6020811015620009fe57600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101562000a2c57600080fd5b600086602001905060008460200190505b86886020010182101562000a67578189015180828801525060208201915060208101905062000a3d565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000b075750600062000b05600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000e2c60201b60201c565b145b1562000b215762000b1f600062000e3760201b60201c565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000b8c57600080fd5b505af115801562000ba1573d6000803e3d6000fd5b505050506040513d602081101562000bb857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000d0757600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000c8957600080fd5b505af115801562000c9e573d6000803e3d6000fd5b505050506040513d602081101562000cb557600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801562000d4057816020015b606081526020019060019003908162000d2a5790505b5090508360006004811062000d5157fe5b60200201518160008151811062000d6457fe5b60200260200101819052508360016004811062000d7d57fe5b60200201518160018151811062000d9057fe5b60200260200101819052508360026004811062000da957fe5b60200201518160028151811062000dbc57fe5b60200260200101819052508360036004811062000dd557fe5b60200201518160038151811062000de857fe5b602002602001018190525062000e0685828562000e5060201b60201c565b9150509392505050565b8060046000848152602001908152602001600020819055505050565b6000813b9050919050565b600062000e49620013e860201b60201c565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000ee15750600062000edf600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000e2c60201b60201c565b145b1562000efb5762000ef9600062000e3760201b60201c565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000f6657600080fd5b505af115801562000f7b573d6000803e3d6000fd5b505050506040513d602081101562000f9257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620010e157600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200106357600080fd5b505af115801562001078573d6000803e3d6000fd5b505050506040513d60208110156200108f57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156200117a5780820151818401526020810190506200115d565b50505050905090810190601f168015620011a85780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015620011c957600080fd5b505af1158015620011de573d6000803e3d6000fd5b505050506040513d6020811015620011f557600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a7640000018111156200122a576000801b915050620013e1565b60606200123d85620019b760201b60201c565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015620012e4578082015181840152602081019050620012c7565b50505050905090810190601f168015620013125780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156200134d57808201518184015260208101905062001330565b50505050905090810190601f1680156200137b5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156200139e57600080fd5b505af1158015620013b3573d6000803e3d6000fd5b50505050506040513d6020811015620013cb57600080fd5b8101908080519060200190929190505050925050505b9392505050565b60008062001410731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed62000e2c60201b60201c565b1115620014bc57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620014b26040518060400160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525062001a7260201b60201c565b60019050620019b4565b6000620014e373c03a2615d5efaf5f49f60b7bb6583eaec212fdf162000e2c60201b60201c565b11156200158f5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620015856040518060400160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525062001a7260201b60201c565b60019050620019b4565b6000620015b673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e62000e2c60201b60201c565b1115620016625773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620016586040518060400160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525062001a7260201b60201c565b60019050620019b4565b60006200168973146500cfd35b22e4a392fe0adc06de1a1368ed4862000e2c60201b60201c565b1115620017355773146500cfd35b22e4a392fe0adc06de1a1368ed48600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200172b6040518060400160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525062001a7260201b60201c565b60019050620019b4565b60006200175c73a2998efd205fb9d4b4963afb70778d6354ad3a4162000e2c60201b60201c565b1115620018085773a2998efd205fb9d4b4963afb70778d6354ad3a41600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620017fe6040518060400160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525062001a7260201b60201c565b60019050620019b4565b60006200182f736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47562000e2c60201b60201c565b11156200189557736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620019b4565b6000620018bc7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf62000e2c60201b60201c565b111562001922577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620019b4565b6000620019497351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa62000e2c60201b60201c565b1115620019af577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620019b4565b600090505b90565b6060620019c962001a8e60201b60201c565b620019d362001ef3565b620019ec8161040062001a9a60201b620024901760201c565b62001a028162001ae760201b620024da1760201c565b60008090505b835181101562001a4e5762001a4084828151811062001a2357fe5b60200260200101518362001afd60201b620024e81790919060201c565b808060010191505062001a08565b5062001a658162001b3160201b6200250d1760201c565b8060000151915050919050565b806003908051906020019062001a8a92919062001f0d565b5050565b60405180590338823950565b600081905060006020828162001aac57fe5b061462001ac7576020818162001abe57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b62001afa81600462001b4760201b60201c565b50565b62001b12826002835162001b6f60201b60201c565b62001b2c818362001cf760201b6200267c1790919060201c565b505050565b62001b4481600762001b4760201b60201c565b50565b62001b6b601f60058360ff16901b178362001db760201b620027271790919060201c565b5050565b6017811162001ba45762001b9e8160058460ff16901b60ff16178462001db760201b620027271790919060201c565b62001cf2565b60ff811162001bf55762001bd1601860058460ff16901b178462001db760201b620027271790919060201c565b62001bee8160018562001e0060201b62002767179092919060201c565b5062001cf1565b61ffff811162001c475762001c23601960058460ff16901b178462001db760201b620027271790919060201c565b62001c408160028562001e0060201b62002767179092919060201c565b5062001cf0565b63ffffffff811162001c9b5762001c77601a60058460ff16901b178462001db760201b620027271790919060201c565b62001c948160048562001e0060201b62002767179092919060201c565b5062001cef565b67ffffffffffffffff811162001cee5762001ccf601b60058460ff16901b178462001db760201b620027271790919060201c565b62001cec8160088562001e0060201b62002767179092919060201c565b505b5b5b5b5b505050565b62001d0162001ef3565b8260200151836000015151835101111562001d425762001d4183600262001d348660200151865162001e7a60201b60201c565b0262001e9860201b60201c565b5b60008060008451905085518051602081830101945086518101825260208701935050505b6020811062001d8b578151835260208301925060208201915060208103905062001d66565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b8160200151600183600001515101111562001de65762001de582600284602001510262001e9860201b60201c565b5b815180516020818301018381536001820183525050505050565b62001e0a62001ef3565b83602001518460000151518301111562001e495762001e4884600262001e3b87602001518662001e7a60201b60201c565b0262001e9860201b60201c565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111562001e8e5782905062001e92565b8190505b92915050565b60608260000151905062001eb3838362001a9a60201b60201c565b62001ec5838262001cf760201b60201c565b50505050565b60405180608001604052806004905b606081526020019060019003908162001eda5790505090565b604051806040016040528060608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062001f5057805160ff191683800117855562001f81565b8280016001018555821562001f81579182015b8281111562001f8057825182559160200191906001019062001f63565b5b50905062001f90919062001f94565b5090565b62001fb991905b8082111562001fb557600081600090555060010162001f9b565b5090565b90565b6129288062001fcc6000396000f3fe6080604052600436106100915760003560e01c80639424732e116100595780639424732e146103b35780639cb8a26a1461040d578063a2e6204514610424578063b69ef8a81461042e578063ed88c68e1461045957610091565b806327dc297e1461009657806338bbfa50146101685780633cbd6429146102d1578063402e699d1461033657806369aec91214610364575b600080fd5b3480156100a257600080fd5b50610166600480360360408110156100b957600080fd5b8101908080359060200190929190803590602001906401000000008111156100e057600080fd5b8201836020820111156100f257600080fd5b8035906020019184600183028401116401000000008311171561011457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610463565b005b34801561017457600080fd5b506102cf6004803603606081101561018b57600080fd5b8101908080359060200190929190803590602001906401000000008111156101b257600080fd5b8201836020820111156101c457600080fd5b803590602001918460018302840111640100000000831117156101e657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561024957600080fd5b82018360208201111561025b57600080fd5b8035906020019184600183028401116401000000008311171561027d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506104a6565b005b3480156102dd57600080fd5b50610320600480360360208110156102f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105b8565b6040518082815260200191505060405180910390f35b6103626004803603602081101561034c57600080fd5b81019080803590602001909291905050506105d0565b005b34801561037057600080fd5b5061039d6004803603602081101561038757600080fd5b8101908080359060200190929190505050610729565b6040518082815260200191505060405180910390f35b3480156103bf57600080fd5b506103ec600480360360208110156103d657600080fd5b81019080803590602001909291905050506107ef565b60405180838152602001821515151581526020019250505060405180910390f35b34801561041957600080fd5b50610422610820565b005b61042c610892565b005b34801561043a57600080fd5b50610443610927565b6040518082815260200191505060405180910390f35b61046161092d565b005b6104a2828260006040519080825280601f01601f19166020018201604052801561049c5781602001600182028038833980820191505090505b506104a6565b5050565b6104ae61094c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e557600080fd5b60006002836040516020018082805190602001908083835b6020831061052057805182526020820191506020810190506020830392506104fd565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c8161056557fe5b06905080600860008681526020019081526020016000206000018190555060006008600086815260200190815260200160002060010160006101000a81548160ff02191690831515021790555050505050565b60076020528060005260406000206000915090505481565b662386f26fc100003410156105e457600080fd5b600060086000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060000154905081811461069257346006600082825401925050819055507f6c266973f0276ca4d3f264805b67a57f592cd3cd18bbbce29685ef3c130aff1360006040518082815260200191505060405180910390a1610725565b346006600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc346002029081150290604051600060405180830381858888f193505050501580156106eb573d6000803e3d6000fd5b507f6c266973f0276ca4d3f264805b67a57f592cd3cd18bbbce29685ef3c130aff1360016040518082815260200191505060405180910390a15b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461078457600080fd5b60065482111561079357600080fd5b816006600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156107e9573d6000803e3d6000fd5b50919050565b60086020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461087957600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b6000809050600062030d40905060006108ad83600184610c6c565b905080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016008600083815260200190815260200160002060010160006101000a81548160ff021916908315150217905550505050565b60065481565b6000341161093a57600080fd5b34600660008282540192505081905550565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806109d4575060006109d2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611207565b145b156109e5576109e36000611212565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a4f57600080fd5b505af1158015610a63573d6000803e3d6000fd5b505050506040513d6020811015610a7957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bc457600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610b4857600080fd5b505af1158015610b5c573d6000803e3d6000fd5b505050506040513d6020811015610b7257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c2c57600080fd5b505afa158015610c40573d6000803e3d6000fd5b505050506040513d6020811015610c5657600080fd5b8101908080519060200190929190505050905090565b60008083118015610c7e575060208311155b610c8757600080fd5b600a84029350606060016040519080825280601f01601f191660200182016040528015610cc35781602001600182028038833980820191505090505b5090508360f81b81600081518110610cd757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015610d3c5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015610d755781602001600182028038833980820191505090505b5090506000610d82611223565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015610dd65781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015610e155781602001600182028038833980820191505090505b509050610e288260186008846000611543565b50610e3161280d565b60405180608001604052808781526020018881526020018681526020018481525090506000610e966040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c6115a2565b9050606060086040519080825280601f01601f191660200182016040528015610ece5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a0100000000000000000000000000000000000000000000000000008104602283015379010000000000000000000000000000000000000000000000000081046021830153780100000000000000000000000000000000000000000000000081046020830153506111f482828560016004811061100d57fe5b602002015160028760006004811061102157fe5b60200201516040518082805190602001908083835b602083106110595780518252602082019150602081019050602083039250611036565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561109b573d6000803e3d6000fd5b5050506040513d60208110156110b057600080fd5b8101908080519060200190929190505050876002600481106110ce57fe5b60200201516040516020018085805190602001908083835b6020831061110957805182526020820191506020810190506020830392506110e6565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b6020831061115a5780518252602082019150602081019050602083039250611137565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b602083106111b1578051825260208201915060208101905060208303925061118e565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120611911565b8199505050505050505050509392505050565b6000813b9050919050565b600061121c61192d565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806112ab575060006112a9600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611207565b145b156112bc576112ba6000611212565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561132657600080fd5b505af115801561133a573d6000803e3d6000fd5b505050506040513d602081101561135057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461149b57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561141f57600080fd5b505af1158015611433573d6000803e3d6000fd5b505050506040513d602081101561144957600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561150357600080fd5b505afa158015611517573d6000803e3d6000fd5b505050506040513d602081101561152d57600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101561155a57600080fd5b600086602001905060008460200190505b868860200101821015611593578189015180828801525060208201915060208101905061156b565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061162a57506000611628600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611207565b145b1561163b576116396000611212565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156116a557600080fd5b505af11580156116b9573d6000803e3d6000fd5b505050506040513d60208110156116cf57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461181a57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561179e57600080fd5b505af11580156117b2573d6000803e3d6000fd5b505050506040513d60208110156117c857600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801561185157816020015b606081526020019060019003908161183c5790505b5090508360006004811061186157fe5b60200201518160008151811061187357fe5b60200260200101819052508360016004811061188b57fe5b60200201518160018151811061189d57fe5b6020026020010181905250836002600481106118b557fe5b6020020151816002815181106118c757fe5b6020026020010181905250836003600481106118df57fe5b6020020151816003815181106118f157fe5b6020026020010181905250611907858285611e84565b9150509392505050565b8060046000848152602001908152602001600020819055505050565b60008061194d731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611207565b11156119ef57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119e66040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506123ea565b60019050611e81565b6000611a0e73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611207565b1115611ab05773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611aa76040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506123ea565b60019050611e81565b6000611acf73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611207565b1115611b715773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b686040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506123ea565b60019050611e81565b6000611b9073146500cfd35b22e4a392fe0adc06de1a1368ed48611207565b1115611c325773146500cfd35b22e4a392fe0adc06de1a1368ed48600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611c296040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506123ea565b60019050611e81565b6000611c5173a2998efd205fb9d4b4963afb70778d6354ad3a41611207565b1115611cf35773a2998efd205fb9d4b4963afb70778d6354ad3a41600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611cea6040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506123ea565b60019050611e81565b6000611d12736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611207565b1115611d7657736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611e81565b6000611d957320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611207565b1115611df9577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611e81565b6000611e187351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611207565b1115611e7c577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611e81565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611f0c57506000611f0a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611207565b145b15611f1d57611f1b6000611212565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611f8757600080fd5b505af1158015611f9b573d6000803e3d6000fd5b505050506040513d6020811015611fb157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120fc57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561208057600080fd5b505af1158015612094573d6000803e3d6000fd5b505050506040513d60208110156120aa57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612193578082015181840152602081019050612178565b50505050905090810190601f1680156121c05780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156121e057600080fd5b505af11580156121f4573d6000803e3d6000fd5b505050506040513d602081101561220a57600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a76400000181111561223d576000801b9150506123e3565b606061224885612404565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156122ed5780820151818401526020810190506122d2565b50505050905090810190601f16801561231a5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612353578082015181840152602081019050612338565b50505050905090810190601f1680156123805780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156123a257600080fd5b505af11580156123b6573d6000803e3d6000fd5b50505050506040513d60208110156123cd57600080fd5b8101908080519060200190929190505050925050505b9392505050565b8060039080519060200190612400929190612834565b5050565b606061240e612484565b6124166128b4565b61242281610400612490565b61242b816124da565b60008090505b835181101561246d5761246084828151811061244957fe5b6020026020010151836124e890919063ffffffff16565b8080600101915050612431565b506124778161250d565b8060000151915050919050565b60405180590338823950565b60008190506000602082816124a157fe5b06146124ba57602081816124b157fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b6124e581600461251b565b50565b6124f5826002835161253c565b612508818361267c90919063ffffffff16565b505050565b61251881600761251b565b50565b612538601f60058360ff16901b178361272790919063ffffffff16565b5050565b60178111612568576125638160058460ff16901b60ff16178461272790919063ffffffff16565b612677565b60ff81116125a95761258d601860058460ff16901b178461272790919063ffffffff16565b6125a3816001856127679092919063ffffffff16565b50612676565b61ffff81116125eb576125cf601960058460ff16901b178461272790919063ffffffff16565b6125e5816002856127679092919063ffffffff16565b50612675565b63ffffffff811161262f57612613601a60058460ff16901b178461272790919063ffffffff16565b612629816004856127679092919063ffffffff16565b50612674565b67ffffffffffffffff81116126735761265b601b60058460ff16901b178461272790919063ffffffff16565b612671816008856127679092919063ffffffff16565b505b5b5b5b5b505050565b6126846128b4565b826020015183600001515183510111156126b4576126b38360026126ad866020015186516127ce565b026127ea565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106126fb57815183526020830192506020820191506020810390506126d8565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b8160200151600183600001515101111561274d5761274c8260028460200151026127ea565b5b815180516020818301018381536001820183525050505050565b61276f6128b4565b83602001518460000151518301111561279d5761279c8460026127968760200151866127ce565b026127ea565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b6000818311156127e0578290506127e4565b8190505b92915050565b6060826000015190506127fd8383612490565b612807838261267c565b50505050565b60405180608001604052806004905b606081526020019060019003908161281c5790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061287557805160ff19168380011785556128a3565b828001600101855582156128a3579182015b828111156128a2578251825591602001919060010190612887565b5b5090506128b091906128ce565b5090565b604051806040016040528060608152602001600081525090565b6128f091905b808211156128ec5760008160009055506001016128d4565b5090565b9056fea265627a7a723158206f96eb3d9144fbe5290854bd4252f5741de5f2b56f22b26424a4fedab6dc3e0d64736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c80639424732e116100595780639424732e146103b35780639cb8a26a1461040d578063a2e6204514610424578063b69ef8a81461042e578063ed88c68e1461045957610091565b806327dc297e1461009657806338bbfa50146101685780633cbd6429146102d1578063402e699d1461033657806369aec91214610364575b600080fd5b3480156100a257600080fd5b50610166600480360360408110156100b957600080fd5b8101908080359060200190929190803590602001906401000000008111156100e057600080fd5b8201836020820111156100f257600080fd5b8035906020019184600183028401116401000000008311171561011457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610463565b005b34801561017457600080fd5b506102cf6004803603606081101561018b57600080fd5b8101908080359060200190929190803590602001906401000000008111156101b257600080fd5b8201836020820111156101c457600080fd5b803590602001918460018302840111640100000000831117156101e657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561024957600080fd5b82018360208201111561025b57600080fd5b8035906020019184600183028401116401000000008311171561027d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506104a6565b005b3480156102dd57600080fd5b50610320600480360360208110156102f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105b8565b6040518082815260200191505060405180910390f35b6103626004803603602081101561034c57600080fd5b81019080803590602001909291905050506105d0565b005b34801561037057600080fd5b5061039d6004803603602081101561038757600080fd5b8101908080359060200190929190505050610729565b6040518082815260200191505060405180910390f35b3480156103bf57600080fd5b506103ec600480360360208110156103d657600080fd5b81019080803590602001909291905050506107ef565b60405180838152602001821515151581526020019250505060405180910390f35b34801561041957600080fd5b50610422610820565b005b61042c610892565b005b34801561043a57600080fd5b50610443610927565b6040518082815260200191505060405180910390f35b61046161092d565b005b6104a2828260006040519080825280601f01601f19166020018201604052801561049c5781602001600182028038833980820191505090505b506104a6565b5050565b6104ae61094c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e557600080fd5b60006002836040516020018082805190602001908083835b6020831061052057805182526020820191506020810190506020830392506104fd565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c8161056557fe5b06905080600860008681526020019081526020016000206000018190555060006008600086815260200190815260200160002060010160006101000a81548160ff02191690831515021790555050505050565b60076020528060005260406000206000915090505481565b662386f26fc100003410156105e457600080fd5b600060086000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060000154905081811461069257346006600082825401925050819055507f6c266973f0276ca4d3f264805b67a57f592cd3cd18bbbce29685ef3c130aff1360006040518082815260200191505060405180910390a1610725565b346006600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc346002029081150290604051600060405180830381858888f193505050501580156106eb573d6000803e3d6000fd5b507f6c266973f0276ca4d3f264805b67a57f592cd3cd18bbbce29685ef3c130aff1360016040518082815260200191505060405180910390a15b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461078457600080fd5b60065482111561079357600080fd5b816006600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156107e9573d6000803e3d6000fd5b50919050565b60086020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461087957600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b6000809050600062030d40905060006108ad83600184610c6c565b905080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016008600083815260200190815260200160002060010160006101000a81548160ff021916908315150217905550505050565b60065481565b6000341161093a57600080fd5b34600660008282540192505081905550565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806109d4575060006109d2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611207565b145b156109e5576109e36000611212565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a4f57600080fd5b505af1158015610a63573d6000803e3d6000fd5b505050506040513d6020811015610a7957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bc457600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610b4857600080fd5b505af1158015610b5c573d6000803e3d6000fd5b505050506040513d6020811015610b7257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c2c57600080fd5b505afa158015610c40573d6000803e3d6000fd5b505050506040513d6020811015610c5657600080fd5b8101908080519060200190929190505050905090565b60008083118015610c7e575060208311155b610c8757600080fd5b600a84029350606060016040519080825280601f01601f191660200182016040528015610cc35781602001600182028038833980820191505090505b5090508360f81b81600081518110610cd757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015610d3c5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015610d755781602001600182028038833980820191505090505b5090506000610d82611223565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015610dd65781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015610e155781602001600182028038833980820191505090505b509050610e288260186008846000611543565b50610e3161280d565b60405180608001604052808781526020018881526020018681526020018481525090506000610e966040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c6115a2565b9050606060086040519080825280601f01601f191660200182016040528015610ece5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a0100000000000000000000000000000000000000000000000000008104602283015379010000000000000000000000000000000000000000000000000081046021830153780100000000000000000000000000000000000000000000000081046020830153506111f482828560016004811061100d57fe5b602002015160028760006004811061102157fe5b60200201516040518082805190602001908083835b602083106110595780518252602082019150602081019050602083039250611036565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561109b573d6000803e3d6000fd5b5050506040513d60208110156110b057600080fd5b8101908080519060200190929190505050876002600481106110ce57fe5b60200201516040516020018085805190602001908083835b6020831061110957805182526020820191506020810190506020830392506110e6565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b6020831061115a5780518252602082019150602081019050602083039250611137565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b602083106111b1578051825260208201915060208101905060208303925061118e565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120611911565b8199505050505050505050509392505050565b6000813b9050919050565b600061121c61192d565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806112ab575060006112a9600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611207565b145b156112bc576112ba6000611212565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561132657600080fd5b505af115801561133a573d6000803e3d6000fd5b505050506040513d602081101561135057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461149b57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561141f57600080fd5b505af1158015611433573d6000803e3d6000fd5b505050506040513d602081101561144957600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561150357600080fd5b505afa158015611517573d6000803e3d6000fd5b505050506040513d602081101561152d57600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101561155a57600080fd5b600086602001905060008460200190505b868860200101821015611593578189015180828801525060208201915060208101905061156b565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061162a57506000611628600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611207565b145b1561163b576116396000611212565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156116a557600080fd5b505af11580156116b9573d6000803e3d6000fd5b505050506040513d60208110156116cf57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461181a57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561179e57600080fd5b505af11580156117b2573d6000803e3d6000fd5b505050506040513d60208110156117c857600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801561185157816020015b606081526020019060019003908161183c5790505b5090508360006004811061186157fe5b60200201518160008151811061187357fe5b60200260200101819052508360016004811061188b57fe5b60200201518160018151811061189d57fe5b6020026020010181905250836002600481106118b557fe5b6020020151816002815181106118c757fe5b6020026020010181905250836003600481106118df57fe5b6020020151816003815181106118f157fe5b6020026020010181905250611907858285611e84565b9150509392505050565b8060046000848152602001908152602001600020819055505050565b60008061194d731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611207565b11156119ef57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119e66040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506123ea565b60019050611e81565b6000611a0e73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611207565b1115611ab05773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611aa76040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506123ea565b60019050611e81565b6000611acf73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611207565b1115611b715773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b686040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506123ea565b60019050611e81565b6000611b9073146500cfd35b22e4a392fe0adc06de1a1368ed48611207565b1115611c325773146500cfd35b22e4a392fe0adc06de1a1368ed48600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611c296040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506123ea565b60019050611e81565b6000611c5173a2998efd205fb9d4b4963afb70778d6354ad3a41611207565b1115611cf35773a2998efd205fb9d4b4963afb70778d6354ad3a41600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611cea6040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506123ea565b60019050611e81565b6000611d12736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611207565b1115611d7657736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611e81565b6000611d957320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611207565b1115611df9577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611e81565b6000611e187351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611207565b1115611e7c577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611e81565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611f0c57506000611f0a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611207565b145b15611f1d57611f1b6000611212565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611f8757600080fd5b505af1158015611f9b573d6000803e3d6000fd5b505050506040513d6020811015611fb157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120fc57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561208057600080fd5b505af1158015612094573d6000803e3d6000fd5b505050506040513d60208110156120aa57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612193578082015181840152602081019050612178565b50505050905090810190601f1680156121c05780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156121e057600080fd5b505af11580156121f4573d6000803e3d6000fd5b505050506040513d602081101561220a57600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a76400000181111561223d576000801b9150506123e3565b606061224885612404565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156122ed5780820151818401526020810190506122d2565b50505050905090810190601f16801561231a5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612353578082015181840152602081019050612338565b50505050905090810190601f1680156123805780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156123a257600080fd5b505af11580156123b6573d6000803e3d6000fd5b50505050506040513d60208110156123cd57600080fd5b8101908080519060200190929190505050925050505b9392505050565b8060039080519060200190612400929190612834565b5050565b606061240e612484565b6124166128b4565b61242281610400612490565b61242b816124da565b60008090505b835181101561246d5761246084828151811061244957fe5b6020026020010151836124e890919063ffffffff16565b8080600101915050612431565b506124778161250d565b8060000151915050919050565b60405180590338823950565b60008190506000602082816124a157fe5b06146124ba57602081816124b157fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b6124e581600461251b565b50565b6124f5826002835161253c565b612508818361267c90919063ffffffff16565b505050565b61251881600761251b565b50565b612538601f60058360ff16901b178361272790919063ffffffff16565b5050565b60178111612568576125638160058460ff16901b60ff16178461272790919063ffffffff16565b612677565b60ff81116125a95761258d601860058460ff16901b178461272790919063ffffffff16565b6125a3816001856127679092919063ffffffff16565b50612676565b61ffff81116125eb576125cf601960058460ff16901b178461272790919063ffffffff16565b6125e5816002856127679092919063ffffffff16565b50612675565b63ffffffff811161262f57612613601a60058460ff16901b178461272790919063ffffffff16565b612629816004856127679092919063ffffffff16565b50612674565b67ffffffffffffffff81116126735761265b601b60058460ff16901b178461272790919063ffffffff16565b612671816008856127679092919063ffffffff16565b505b5b5b5b5b505050565b6126846128b4565b826020015183600001515183510111156126b4576126b38360026126ad866020015186516127ce565b026127ea565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106126fb57815183526020830192506020820191506020810390506126d8565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b8160200151600183600001515101111561274d5761274c8260028460200151026127ea565b5b815180516020818301018381536001820183525050505050565b61276f6128b4565b83602001518460000151518301111561279d5761279c8460026127968760200151866127ce565b026127ea565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b6000818311156127e0578290506127e4565b8190505b92915050565b6060826000015190506127fd8383612490565b612807838261267c565b50505050565b60405180608001604052806004905b606081526020019060019003908161281c5790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061287557805160ff19168380011785556128a3565b828001600101855582156128a3579182015b828111156128a2578251825591602001919060010190612887565b5b5090506128b091906128ce565b5090565b604051806040016040528060608152602001600081525090565b6128f091905b808211156128ec5760008160009055506001016128d4565b5090565b9056fea265627a7a723158206f96eb3d9144fbe5290854bd4252f5741de5f2b56f22b26424a4fedab6dc3e0d64736f6c63430005100032",
  "sourceMap": "117:1912:1:-;;;478:53;8:9:-1;5:2;;;30:1;27;20:12;5:2;478:53:1;113:10:3;105:5;;:18;;;;;;;;;;;;;;;;;;515:8:1;:6;;;:8;;:::i;:::-;117:1912;;885:401;942:29;974:1;942:33;;986:24;1013:6;986:33;;1032:15;1050:144;1090:21;250:1;1167:16;1050:25;;;:144;;:::i;:::-;1032:162;;1228:7;1205:8;:20;1214:10;1205:20;;;;;;;;;;;;;;;:30;;;;1274:4;1247:7;:16;1255:7;1247:16;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;885:401;;;:::o;46097:2683:4:-;46199:16;46247:1;46237:7;:11;46236:32;;;;;46265:2;46254:7;:13;;46236:32;46228:41;;;;;;46290:2;46280:12;;;;46349:19;46381:1;46371:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46371:12:4;;;;46349:34;;46417:7;46406:20;;46394:6;46401:1;46394:9;;;;;;;;;;;:32;;;;;;;;;;;46437:19;46469:2;46459:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46459:13:4;;;;46437:35;;46483:27;46523:2;46513:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46513:13:4;;;;46483:43;;46537:30;46570:40;:38;;;:40;;:::i;:::-;46537:73;;46660:4;46652:6;46645:20;47013:9;47003:8;46999:24;46994:1;46986:6;46982:14;46972:25;46968:56;46961:4;46953:6;46949:17;46942:83;47062:4;47046:14;47039:28;47115:22;47108:4;47092:14;47088:25;47081:57;47159:18;47190:2;47180:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47180:13:4;;;;47159:34;;47253:6;47246:4;47239:5;47235:16;47228:32;47281:25;47319:1;47309:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47309:12:4;;;;47281:40;;47332;47342:5;47349:2;47353:1;47356:12;47370:1;47332:9;;;:40;;:::i;:::-;;47383:20;;:::i;:::-;:62;;;;;;;;47407:6;47383:62;;;;47415:6;47383:62;;;;47423:14;47383:62;;;;47439:5;47383:62;;;;;47456:15;47474:47;;;;;;;;;;;;;;;;;;47499:4;47505:15;47474:14;;;:47;;:::i;:::-;47456:65;;47532:30;47575:1;47565:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47565:12:4;;;;47532:45;;47645:4;47631:12;47627:23;47621:30;47710:65;47707:1;47703:73;47696:4;47677:17;47673:28;47665:112;47836:63;47833:1;47829:71;47822:4;47803:17;47799:28;47791:110;47960:61;47957:1;47953:69;47946:4;47927:17;47923:28;47915:108;48082:59;48079:1;48075:67;48068:4;48049:17;48045:28;48037:106;48202:57;48199:1;48195:65;48188:4;48169:17;48165:28;48157:104;48320:55;48317:1;48313:63;48306:4;48287:17;48283:28;48275:102;48436:53;48433:1;48429:61;48422:4;48403:17;48399:28;48391:100;48550:51;48547:1;48543:59;48536:4;48517:17;48513:28;48505:98;47597:1017;48624:123;48656:7;48692:17;48711:4;48716:1;48711:7;;;;;;;;;;;48720:15;48727:4;48732:1;48727:7;;;;;;;;;;;48720:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48720:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48720:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48720:15:4;;;;;;;;;;;;;;;;48737:4;48742:1;48737:7;;;;;;;;;;;48675:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:4;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:4;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;48675:70:4;;;48665:81;;;;;;48624:31;;;:123;;:::i;:::-;48765:7;48758:14;;;;;;;;;;;46097:2683;;;;;:::o;38467:171::-;38547:23;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;;;:25;;:::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;;;:35;;:::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;38590:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38590:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38590:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38590:40:4;;;;;;;;;;;;;;;;38583:47;;38467:171;:::o;55551:707::-;55679:25;55717:14;55744:9;55734:7;:19;55717:36;;55786:9;55772:3;:10;:23;;55764:32;;;;;;55852:6;55866:11;55861:2;:16;55852:25;;55969:6;55983:9;55978:2;:14;55969:23;;56003:227;56034:7;56020:11;56015:2;:16;:26;56010:1;:32;56003:227;;;56115:1;56108:5;56104:13;56098:20;56156:3;56152:1;56147:3;56143:11;56136:24;56068:107;56194:2;56189:7;;;;56216:2;56211:7;;;;56003:227;;;56247:3;56240:10;;;;;55551:707;;;;;;;:::o;35804:384::-;35924:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;;;:25;;:::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;;;:35;;:::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;35948:22;35985:1;35973:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35948:39;;36011:5;36017:1;36011:8;;;;;;;;;;;35998:7;36006:1;35998:10;;;;;;;;;;;;;:21;;;;36043:5;36049:1;36043:8;;;;;;;;;;;36030:7;36038:1;36030:10;;;;;;;;;;;;;:21;;;;36075:5;36081:1;36075:8;;;;;;;;;;;36062:7;36070:1;36062:10;;;;;;;;;;;;;:21;;;;36107:5;36113:1;36107:8;;;;;;;;;;;36094:7;36102:1;36094:10;;;;;;;;;;;;;:21;;;;36133:47;36148:11;36161:7;36170:9;36133:14;;;:47;;:::i;:::-;36126:54;;;35804:384;;;;;:::o;48788:154::-;48923:11;48888:22;:32;48911:8;48888:32;;;;;;;;;;;:46;;;;48788:154;;:::o;38164:151::-;38223:10;38291:5;38279:18;38270:27;;38255:53;;;:::o;12880:208::-;12945:16;13059:21;:19;;;:21;;:::i;:::-;13052:28;;12880:208;;;:::o;30207:461::-;30326:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;;;:25;;:::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;;;:35;;:::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;30350:10;30363:8;;;;;;;;;;;:17;;;30381:11;30394:9;30363:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30363:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30363:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30363:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30363:41:4;;;;;;;;;;;;;;;;30350:54;;30451:9;30437:11;:23;30427:7;:33;30419:5;:41;30415:109;;;30484:1;30477:8;;;;;;;30415:109;30534:17;30554:14;30562:5;30554:7;;;:14;;:::i;:::-;30534:34;;30586:8;;;;;;;;;;;:28;;;30621:5;30628:1;30631:11;30644:4;30650:9;30586:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30586:74:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30586:74:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30586:74:4;;;;;;;;;;;;;;;;30579:81;;;;12386:1;30207:461;;;;;:::o;13372:2070::-;13421:16;13512:1;13454:55;13466:42;13454:11;;;:55;;:::i;:::-;:59;13450:250;;;13566:42;13540:3;;:69;;;;;;;;;;;;;;;;;;13624:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13684:4;13677:11;;;;13450:250;13772:1;13714:55;13726:42;13714:11;;;:55;;:::i;:::-;:59;13710:259;;;13834:42;13808:3;;:69;;;;;;;;;;;;;;;;;;13892:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;13953:4;13946:11;;;;13710:259;14041:1;13983:55;13995:42;13983:11;;;:55;;:::i;:::-;:59;13979:254;;;14101:42;14075:3;;:69;;;;;;;;;;;;;;;;;;14159:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;14217:4;14210:11;;;;13979:254;14305:1;14247:55;14259:42;14247:11;;;:55;;:::i;:::-;:59;14243:258;;;14367:42;14341:3;;:69;;;;;;;;;;;;;;;;;;14425:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14485:4;14478:11;;;;14243:258;14573:1;14515:55;14527:42;14515:11;;;:55;;:::i;:::-;:59;14511:256;;;14634:42;14608:3;;:69;;;;;;;;;;;;;;;;;;14692:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14751:4;14744:11;;;;14511:256;14839:1;14781:55;14793:42;14781:11;;;:55;;:::i;:::-;:59;14777:205;;;14901:42;14875:3;;:69;;;;;;;;;;;;;;;;;;14966:4;14959:11;;;;14777:205;15054:1;14996:55;15008:42;14996:11;;;:55;;:::i;:::-;:59;14992:204;;;15115:42;15089:3;;:69;;;;;;;;;;;;;;;;;;15180:4;15173:11;;;;14992:204;15268:1;15210:55;15222:42;15210:11;;;:55;;:::i;:::-;:59;15206:206;;;15331:42;15305:3;;:69;;;;;;;;;;;;;;;;;;15396:4;15389:11;;;;15206:206;15429:5;15422:12;;13372:2070;;:::o;45714:375::-;45775:26;45814:19;:17;;;:19;;:::i;:::-;45844:24;;:::i;:::-;45879:22;45891:3;45896:4;45879:11;;;;;:22;;:::i;:::-;45912:16;:3;:14;;;;;:16;;:::i;:::-;45944:6;45953:1;45944:10;;45939:90;45960:4;:11;45956:1;:15;45939:90;;;45993:24;46009:4;46014:1;46009:7;;;;;;;;;;;;;;45993:3;:15;;;;;;:24;;;;:::i;:::-;45973:3;;;;;;;45939:90;;;;46039:17;:3;:15;;;;;:17;;:::i;:::-;46074:3;:7;;;46067:14;;;45714:375;;;:::o;13096:127::-;13202:13;13178:21;:37;;;;;;;;;;;;:::i;:::-;;13096:127;:::o;59205:175::-;59301:4;59295:11;59356:4;59349:5;59345:16;59335:8;59329:4;59320:42;59268:105;:::o;4339:446::-;4414:13;4430:9;4414:25;;4471:1;4465:2;4454:8;:13;;;;;;:18;4450:83;;4518:2;4507:8;:13;;;;;;4501:2;:20;4489:32;;;;4450:83;4559:8;4543:4;:13;;:24;;;;;4657:4;4651:11;4689:3;4683:4;4676:17;4719:1;4714:3;4707:14;4757:8;4752:3;4748:18;4742:4;4735:32;4625:153;;;;:::o;10737:130::-;10809:50;10836:4;8844:1;10809:26;;;:50;;:::i;:::-;10737:130;:::o;10342:181::-;10436:49;10447:4;8794:1;10471:6;:13;10436:10;;;:49;;:::i;:::-;10496:19;10508:6;10496:4;:11;;;;;;:19;;;;:::i;:::-;;10342:181;;:::o;11009:138::-;11082:57;11109:4;9009:1;11082:26;;;:57;;:::i;:::-;11009:138;:::o;9765:147::-;9866:38;9900:2;9895:1;9885:6;:11;;;;9884:18;9866:4;:11;;;;;;:38;;;;:::i;:::-;9765:147;;:::o;9019:738::-;9131:2;9121:6;:12;9117:633;;9150:42;9184:6;9179:1;9169:6;:11;;;;9168:22;;;9150:4;:11;;;;;;:42;;;;:::i;:::-;9117:633;;;9224:4;9214:6;:14;9210:540;;9245:38;9279:2;9274:1;9264:6;:11;;;;9263:18;9245:4;:11;;;;;;:38;;;;:::i;:::-;9298:25;9313:6;9321:1;9298:4;:14;;;;;;:25;;;;;:::i;:::-;;9210:540;;;9355:6;9345;:16;9341:409;;9378:38;9412:2;9407:1;9397:6;:11;;;;9396:18;9378:4;:11;;;;;;:38;;;;:::i;:::-;9431:25;9446:6;9454:1;9431:4;:14;;;;;;:25;;;;;:::i;:::-;;9341:409;;;9488:10;9478:6;:20;9474:276;;9515:38;9549:2;9544:1;9534:6;:11;;;;9533:18;9515:4;:11;;;;;;:38;;;;:::i;:::-;9568:25;9583:6;9591:1;9568:4;:14;;;;;;:25;;;;;:::i;:::-;;9474:276;;;9625:18;9615:6;:28;9611:139;;9660:38;9694:2;9689:1;9679:6;:11;;;;9678:18;9660:4;:11;;;;;;:38;;;;:::i;:::-;9713:25;9728:6;9736:1;9713:4;:14;;;;;;:25;;;;;:::i;:::-;;9611:139;9474:276;9341:409;9210:540;9117:633;9019:738;;;:::o;5425:1241::-;5504:21;;:::i;:::-;5575:4;:13;;;5557:4;:8;;;:15;5542:5;:12;:30;:46;5538:129;;;5605:50;5612:4;5653:1;5618:32;5622:4;:13;;;5637:5;:12;5618:3;;;:32;;:::i;:::-;:36;5605:6;;;:50;;:::i;:::-;5538:129;5677:9;5697:8;5716;5727:5;:12;5716:23;;5794:4;5788:11;5870:6;5864:13;5958:2;5949:6;5941;5937:19;5933:28;5925:36;;6082:5;6076:12;6068:6;6064:25;6056:6;6049:41;6146:2;6139:5;6135:14;6128:21;;5759:401;;6170:212;6183:2;6176:3;:9;6170:212;;6302:3;6296:10;6290:4;6283:24;6344:2;6336:10;;;;6368:2;6361:9;;;;6194:2;6187:9;;;;6170:212;;;6392:9;6424:1;6417:3;6412:2;:8;6404:3;:17;:21;6392:33;;6519:4;6515:9;6509:3;6503:10;6499:26;6572:4;6565;6559:11;6555:22;6617:7;6607:8;6604:21;6598:4;6591:35;6469:168;;6654:4;6647:11;;;;;;5425:1241;;;;:::o;6960:586::-;7060:4;:13;;;7056:1;7038:4;:8;;;:15;:19;:35;7034:99;;;7090:31;7097:4;7119:1;7103:4;:13;;;:17;7090:6;;;:31;;:::i;:::-;7034:99;7187:4;7181:11;7263:6;7257:13;7355:2;7346:6;7338;7334:19;7330:28;7454:5;7448:4;7440:20;7501:1;7493:6;7489:14;7481:6;7474:30;7152:387;;;;;:::o;7840:748::-;7925:21;;:::i;:::-;7988:4;:13;;;7970:4;:8;;;:15;7963:4;:22;:38;7959:113;;;8018:42;8025:4;8058:1;8031:24;8035:4;:13;;;8050:4;8031:3;;;:24;;:::i;:::-;:28;8018:6;;;:42;;:::i;:::-;7959:113;8082:9;8108:1;8101:4;8094:3;:11;:15;8082:27;;8164:4;8158:11;8240:6;8234:13;8332:4;8323:6;8315;8311:19;8307:30;8470:5;8462:4;8458:9;8451:4;8445:11;8441:27;8438:38;8432:4;8425:52;8518:4;8510:6;8506:17;8498:6;8491:33;8129:430;;;8576:4;8569:11;;;7840:748;;;;;:::o;4978:151::-;5031:9;5062:2;5057;:7;5053:49;;;5088:2;5081:9;;;;5053:49;5119:2;5112:9;;4978:151;;;;;:::o;4793:177::-;4869:19;4891:4;:8;;;4869:30;;4910:21;4915:4;4921:9;4910:4;;;:21;;:::i;:::-;4942:20;4949:4;4955:6;4942;;;:20;;:::i;:::-;;4793:177;;;:::o;117:1912:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "117:1912:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15686:124:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15686:124:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15686:124:4;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15686:124:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15686:124:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15686:124:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15686:124:4;;;;;;;;;;;;;;;:::i;:::-;;539:338:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;539:338:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;539:338:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;539:338:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;539:338:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;539:338:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;539:338:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;539:338:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;539:338:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;539:338:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;539:338:1;;;;;;;;;;;;;;;:::i;:::-;;350:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;350:44:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;350:44:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1294:409;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1294:409:1;;;;;;;;;;;;;;;;;:::i;:::-;;1831:195;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1831:195:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1831:195:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;401:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;401:42:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;401:42:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;95:89:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;95:89:0;;;:::i;:::-;;885:401:1;;;:::i;:::-;;178:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;178:19:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1711:112;;;:::i;:::-;;15686:124:4;15762:40;15773:5;15780:7;15799:1;15789:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15789:12:4;;;;15762:10;:40::i;:::-;15686:124;;:::o;539:338:1:-;666:20;:18;:20::i;:::-;652:34;;:10;:34;;;644:43;;;;;;700:20;771:1;758:7;741:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;741:25:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;741:25:1;;;731:36;;;;;;723:45;;:49;;;;;;700:72;;813:12;783:7;:17;791:8;783:17;;;;;;;;;;;:27;;:42;;;;864:5;836:7;:17;844:8;836:17;;;;;;;;;;;:25;;;:33;;;;;;;;;;;;;;;;;;539:338;;;;:::o;350:44::-;;;;;;;;;;;;;;;;;:::o;1294:409::-;1375:10;1362:9;:23;;1354:32;;;;;;1399:9;1411:7;:29;1419:8;:20;1428:10;1419:20;;;;;;;;;;;;;;;;1411:29;;;;;;;;;;;:39;;;1399:51;;1471:1;1466;:6;1463:233;;1507:9;1496:7;;:20;;;;;;;;;;;1534:6;1538:1;1534:6;;;;;;;;;;;;;;;;;;1463:233;;;1602:9;1591:7;;:20;;;;;;;;;;;1626:10;:19;;:34;1649:9;1646:1;:13;1626:34;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1626:34:1;1678:6;1682:1;1678:6;;;;;;;;;;;;;;;;;;1463:233;1294:409;;:::o;1831:195::-;1892:4;182:5:3;;;;;;;;;;;168:19;;:10;:19;;;160:28;;;;;;1936:7:1;;1922:10;:21;;1914:30;;;;;;1966:10;1955:7;;:21;;;;;;;;;;;1987:10;:19;;:31;2007:10;1987:31;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1987:31:1;1831:195;;;:::o;401:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;95:89:0:-;182:5:3;;;;;;;;;;;168:19;;:10;:19;;;160:28;;;;;;165:10:0;152:24;;;885:401:1;942:29;974:1;942:33;;986:24;1013:6;986:33;;1032:15;1050:144;1090:21;250:1;1167:16;1050:25;:144::i;:::-;1032:162;;1228:7;1205:8;:20;1214:10;1205:20;;;;;;;;;;;;;;;:30;;;;1274:4;1247:7;:16;1255:7;1247:16;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;885:401;;;:::o;178:19::-;;;;:::o;1711:112::-;1782:1;1770:9;:13;1761:23;;;;;;1806:9;1795:7;;:20;;;;;;;;;;;1711:112::o;38024:132:4:-;38084:24;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;38128:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38128:20:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38128:20:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38128:20:4;;;;;;;;;;;;;;;;38121:27;;38024:132;:::o;46097:2683::-;46199:16;46247:1;46237:7;:11;46236:32;;;;;46265:2;46254:7;:13;;46236:32;46228:41;;;;;;46290:2;46280:12;;;;46349:19;46381:1;46371:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46371:12:4;;;;46349:34;;46417:7;46406:20;;46394:6;46401:1;46394:9;;;;;;;;;;;:32;;;;;;;;;;;46437:19;46469:2;46459:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46459:13:4;;;;46437:35;;46483:27;46523:2;46513:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46513:13:4;;;;46483:43;;46537:30;46570:40;:38;:40::i;:::-;46537:73;;46660:4;46652:6;46645:20;47013:9;47003:8;46999:24;46994:1;46986:6;46982:14;46972:25;46968:56;46961:4;46953:6;46949:17;46942:83;47062:4;47046:14;47039:28;47115:22;47108:4;47092:14;47088:25;47081:57;47159:18;47190:2;47180:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47180:13:4;;;;47159:34;;47253:6;47246:4;47239:5;47235:16;47228:32;47281:25;47319:1;47309:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47309:12:4;;;;47281:40;;47332;47342:5;47349:2;47353:1;47356:12;47370:1;47332:9;:40::i;:::-;;47383:20;;:::i;:::-;:62;;;;;;;;47407:6;47383:62;;;;47415:6;47383:62;;;;47423:14;47383:62;;;;47439:5;47383:62;;;;;47456:15;47474:47;;;;;;;;;;;;;;;;;;47499:4;47505:15;47474:14;:47::i;:::-;47456:65;;47532:30;47575:1;47565:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47565:12:4;;;;47532:45;;47645:4;47631:12;47627:23;47621:30;47710:65;47707:1;47703:73;47696:4;47677:17;47673:28;47665:112;47836:63;47833:1;47829:71;47822:4;47803:17;47799:28;47791:110;47960:61;47957:1;47953:69;47946:4;47927:17;47923:28;47915:108;48082:59;48079:1;48075:67;48068:4;48049:17;48045:28;48037:106;48202:57;48199:1;48195:65;48188:4;48169:17;48165:28;48157:104;48320:55;48317:1;48313:63;48306:4;48287:17;48283:28;48275:102;48436:53;48433:1;48429:61;48422:4;48403:17;48399:28;48391:100;48550:51;48547:1;48543:59;48536:4;48517:17;48513:28;48505:98;47597:1017;48624:123;48656:7;48692:17;48711:4;48716:1;48711:7;;;;;;;;;;;48720:15;48727:4;48732:1;48727:7;;;;;;;;;;;48720:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48720:15:4;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48720:15:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48720:15:4;;;;;;;;;;;;;;;;48737:4;48742:1;48737:7;;;;;;;;;;;48675:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:4;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:4;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48675:70:4;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;48675:70:4;;;48665:81;;;;;;48624:31;:123::i;:::-;48765:7;48758:14;;;;;;;;;;;46097:2683;;;;;:::o;38164:151::-;38223:10;38291:5;38279:18;38270:27;;38255:53;;;:::o;12880:208::-;12945:16;13059:21;:19;:21::i;:::-;13052:28;;12880:208;;;:::o;38467:171::-;38547:23;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;38590:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38590:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38590:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38590:40:4;;;;;;;;;;;;;;;;38583:47;;38467:171;:::o;55551:707::-;55679:25;55717:14;55744:9;55734:7;:19;55717:36;;55786:9;55772:3;:10;:23;;55764:32;;;;;;55852:6;55866:11;55861:2;:16;55852:25;;55969:6;55983:9;55978:2;:14;55969:23;;56003:227;56034:7;56020:11;56015:2;:16;:26;56010:1;:32;56003:227;;;56115:1;56108:5;56104:13;56098:20;56156:3;56152:1;56147:3;56143:11;56136:24;56068:107;56194:2;56189:7;;;;56216:2;56211:7;;;;56003:227;;;56247:3;56240:10;;;;;55551:707;;;;;;;:::o;35804:384::-;35924:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;35948:22;35985:1;35973:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35948:39;;36011:5;36017:1;36011:8;;;;;;;;;;;35998:7;36006:1;35998:10;;;;;;;;;;;;;:21;;;;36043:5;36049:1;36043:8;;;;;;;;;;;36030:7;36038:1;36030:10;;;;;;;;;;;;;:21;;;;36075:5;36081:1;36075:8;;;;;;;;;;;36062:7;36070:1;36062:10;;;;;;;;;;;;;:21;;;;36107:5;36113:1;36107:8;;;;;;;;;;;36094:7;36102:1;36094:10;;;;;;;;;;;;;:21;;;;36133:47;36148:11;36161:7;36170:9;36133:14;:47::i;:::-;36126:54;;;35804:384;;;;;:::o;48788:154::-;48923:11;48888:22;:32;48911:8;48888:32;;;;;;;;;;;:46;;;;48788:154;;:::o;13372:2070::-;13421:16;13512:1;13454:55;13466:42;13454:11;:55::i;:::-;:59;13450:250;;;13566:42;13540:3;;:69;;;;;;;;;;;;;;;;;;13624:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13684:4;13677:11;;;;13450:250;13772:1;13714:55;13726:42;13714:11;:55::i;:::-;:59;13710:259;;;13834:42;13808:3;;:69;;;;;;;;;;;;;;;;;;13892:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13953:4;13946:11;;;;13710:259;14041:1;13983:55;13995:42;13983:11;:55::i;:::-;:59;13979:254;;;14101:42;14075:3;;:69;;;;;;;;;;;;;;;;;;14159:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14217:4;14210:11;;;;13979:254;14305:1;14247:55;14259:42;14247:11;:55::i;:::-;:59;14243:258;;;14367:42;14341:3;;:69;;;;;;;;;;;;;;;;;;14425:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14485:4;14478:11;;;;14243:258;14573:1;14515:55;14527:42;14515:11;:55::i;:::-;:59;14511:256;;;14634:42;14608:3;;:69;;;;;;;;;;;;;;;;;;14692:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14751:4;14744:11;;;;14511:256;14839:1;14781:55;14793:42;14781:11;:55::i;:::-;:59;14777:205;;;14901:42;14875:3;;:69;;;;;;;;;;;;;;;;;;14966:4;14959:11;;;;14777:205;15054:1;14996:55;15008:42;14996:11;:55::i;:::-;:59;14992:204;;;15115:42;15089:3;;:69;;;;;;;;;;;;;;;;;;15180:4;15173:11;;;;14992:204;15268:1;15210:55;15222:42;15210:11;:55::i;:::-;:59;15206:206;;;15331:42;15305:3;;:69;;;;;;;;;;;;;;;;;;15396:4;15389:11;;;;15206:206;15429:5;15422:12;;13372:2070;;:::o;30207:461::-;30326:11;12155:1;12131:26;;12139:3;;;;;;;;;;;12131:26;;;12130:64;;;;12192:1;12163:25;12183:3;;;;;;;;;;;12163:11;:25::i;:::-;:30;12130:64;12126:132;;;12211:35;11777:1;12211:19;:35::i;:::-;;12126:132;12293:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12293:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12293:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12293:16:4;;;;;;;;;;;;;;;;12272:37;;12280:8;;;;;;;;;;;12272:37;;;12268:108;;12347:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12347:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12347:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12347:16:4;;;;;;;;;;;;;;;;12326:8;;:38;;;;;;;;;;;;;;;;;;12268:108;30350:10;30363:8;;;;;;;;;;;:17;;;30381:11;30394:9;30363:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30363:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30363:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30363:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30363:41:4;;;;;;;;;;;;;;;;30350:54;;30451:9;30437:11;:23;30427:7;:33;30419:5;:41;30415:109;;;30484:1;30477:8;;;;;;;30415:109;30534:17;30554:14;30562:5;30554:7;:14::i;:::-;30534:34;;30586:8;;;;;;;;;;;:28;;;30621:5;30628:1;30631:11;30644:4;30650:9;30586:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30586:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30586:74:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30586:74:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30586:74:4;;;;;;;;;;;;;;;;30579:81;;;;12386:1;30207:461;;;;;:::o;13096:127::-;13202:13;13178:21;:37;;;;;;;;;;;;:::i;:::-;;13096:127;:::o;45714:375::-;45775:26;45814:19;:17;:19::i;:::-;45844:24;;:::i;:::-;45879:22;45891:3;45896:4;45879:11;:22::i;:::-;45912:16;:3;:14;:16::i;:::-;45944:6;45953:1;45944:10;;45939:90;45960:4;:11;45956:1;:15;45939:90;;;45993:24;46009:4;46014:1;46009:7;;;;;;;;;;;;;;45993:3;:15;;:24;;;;:::i;:::-;45973:3;;;;;;;45939:90;;;;46039:17;:3;:15;:17::i;:::-;46074:3;:7;;;46067:14;;;45714:375;;;:::o;59205:175::-;59301:4;59295:11;59356:4;59349:5;59345:16;59335:8;59329:4;59320:42;59268:105;:::o;4339:446::-;4414:13;4430:9;4414:25;;4471:1;4465:2;4454:8;:13;;;;;;:18;4450:83;;4518:2;4507:8;:13;;;;;;4501:2;:20;4489:32;;;;4450:83;4559:8;4543:4;:13;;:24;;;;;4657:4;4651:11;4689:3;4683:4;4676:17;4719:1;4714:3;4707:14;4757:8;4752:3;4748:18;4742:4;4735:32;4625:153;;;;:::o;10737:130::-;10809:50;10836:4;8844:1;10809:26;:50::i;:::-;10737:130;:::o;10342:181::-;10436:49;10447:4;8794:1;10471:6;:13;10436:10;:49::i;:::-;10496:19;10508:6;10496:4;:11;;:19;;;;:::i;:::-;;10342:181;;:::o;11009:138::-;11082:57;11109:4;9009:1;11082:26;:57::i;:::-;11009:138;:::o;9765:147::-;9866:38;9900:2;9895:1;9885:6;:11;;;;9884:18;9866:4;:11;;:38;;;;:::i;:::-;9765:147;;:::o;9019:738::-;9131:2;9121:6;:12;9117:633;;9150:42;9184:6;9179:1;9169:6;:11;;;;9168:22;;;9150:4;:11;;:42;;;;:::i;:::-;9117:633;;;9224:4;9214:6;:14;9210:540;;9245:38;9279:2;9274:1;9264:6;:11;;;;9263:18;9245:4;:11;;:38;;;;:::i;:::-;9298:25;9313:6;9321:1;9298:4;:14;;:25;;;;;:::i;:::-;;9210:540;;;9355:6;9345;:16;9341:409;;9378:38;9412:2;9407:1;9397:6;:11;;;;9396:18;9378:4;:11;;:38;;;;:::i;:::-;9431:25;9446:6;9454:1;9431:4;:14;;:25;;;;;:::i;:::-;;9341:409;;;9488:10;9478:6;:20;9474:276;;9515:38;9549:2;9544:1;9534:6;:11;;;;9533:18;9515:4;:11;;:38;;;;:::i;:::-;9568:25;9583:6;9591:1;9568:4;:14;;:25;;;;;:::i;:::-;;9474:276;;;9625:18;9615:6;:28;9611:139;;9660:38;9694:2;9689:1;9679:6;:11;;;;9678:18;9660:4;:11;;:38;;;;:::i;:::-;9713:25;9728:6;9736:1;9713:4;:14;;:25;;;;;:::i;:::-;;9611:139;9474:276;9341:409;9210:540;9117:633;9019:738;;;:::o;5425:1241::-;5504:21;;:::i;:::-;5575:4;:13;;;5557:4;:8;;;:15;5542:5;:12;:30;:46;5538:129;;;5605:50;5612:4;5653:1;5618:32;5622:4;:13;;;5637:5;:12;5618:3;:32::i;:::-;:36;5605:6;:50::i;:::-;5538:129;5677:9;5697:8;5716;5727:5;:12;5716:23;;5794:4;5788:11;5870:6;5864:13;5958:2;5949:6;5941;5937:19;5933:28;5925:36;;6082:5;6076:12;6068:6;6064:25;6056:6;6049:41;6146:2;6139:5;6135:14;6128:21;;5759:401;;6170:212;6183:2;6176:3;:9;6170:212;;6302:3;6296:10;6290:4;6283:24;6344:2;6336:10;;;;6368:2;6361:9;;;;6194:2;6187:9;;;;6170:212;;;6392:9;6424:1;6417:3;6412:2;:8;6404:3;:17;:21;6392:33;;6519:4;6515:9;6509:3;6503:10;6499:26;6572:4;6565;6559:11;6555:22;6617:7;6607:8;6604:21;6598:4;6591:35;6469:168;;6654:4;6647:11;;;;;;5425:1241;;;;:::o;6960:586::-;7060:4;:13;;;7056:1;7038:4;:8;;;:15;:19;:35;7034:99;;;7090:31;7097:4;7119:1;7103:4;:13;;;:17;7090:6;:31::i;:::-;7034:99;7187:4;7181:11;7263:6;7257:13;7355:2;7346:6;7338;7334:19;7330:28;7454:5;7448:4;7440:20;7501:1;7493:6;7489:14;7481:6;7474:30;7152:387;;;;;:::o;7840:748::-;7925:21;;:::i;:::-;7988:4;:13;;;7970:4;:8;;;:15;7963:4;:22;:38;7959:113;;;8018:42;8025:4;8058:1;8031:24;8035:4;:13;;;8050:4;8031:3;:24::i;:::-;:28;8018:6;:42::i;:::-;7959:113;8082:9;8108:1;8101:4;8094:3;:11;:15;8082:27;;8164:4;8158:11;8240:6;8234:13;8332:4;8323:6;8315;8311:19;8307:30;8470:5;8462:4;8458:9;8451:4;8445:11;8441:27;8438:38;8432:4;8425:52;8518:4;8510:6;8506:17;8498:6;8491:33;8129:430;;;8576:4;8569:11;;;7840:748;;;;;:::o;4978:151::-;5031:9;5062:2;5057;:7;5053:49;;;5088:2;5081:9;;;;5053:49;5119:2;5112:9;;4978:151;;;;;:::o;4793:177::-;4869:19;4891:4;:8;;;4869:30;;4910:21;4915:4;4921:9;4910:4;:21::i;:::-;4942:20;4949:4;4955:6;4942;:20::i;:::-;;4793:177;;;:::o;117:1912:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "import \"./Ownable.sol\";\r\nimport \"./Destroyable.sol\";\r\nimport \"./provableAPI_0.5.sol\";\r\n\r\npragma solidity ^0.5.16;\r\n\r\ncontract Flip is Ownable, Destroyable, usingProvable\r\n{\r\n    uint public balance;\r\n    uint256 constant NUM_RANDOM_BYTES_REQUESTED = 1;\r\n    \r\n    struct Player\r\n    {\r\n        uint256 playerNum;\r\n        bool waiting;\r\n    }\r\n\r\n    mapping (address => bytes32) public playerId;\r\n    mapping (bytes32 => Player) public players;\r\n\r\n    event wol(uint n);\r\n\r\n    constructor() public\r\n    {\r\n        update();\r\n    }\r\n\r\n    function __callback(bytes32 _queryId, string memory _result, bytes memory _proof) public\r\n    {\r\n        require(msg.sender == provable_cbAddress());\r\n\r\n        uint256 randomNumber = uint256(keccak256(abi.encodePacked(_result))) % 2;\r\n        players[_queryId].playerNum = randomNumber;\r\n        players[_queryId].waiting = false;\r\n    }\r\n\r\n    function update() public payable\r\n    {        \r\n        uint256 QUERY_EXECUTION_DELAY = 0;\r\n        uint256 GAS_FOR_CALLBACK = 200000;\r\n\r\n        bytes32 queryId = provable_newRandomDSQuery(\r\n            QUERY_EXECUTION_DELAY,\r\n            NUM_RANDOM_BYTES_REQUESTED,\r\n            GAS_FOR_CALLBACK\r\n        );\r\n        playerId[msg.sender] = queryId; \r\n        players[queryId].waiting = true;\r\n    }\r\n\r\n    function coinFlip(uint256 n) public payable\r\n    {\r\n        require(msg.value >= 0.01 ether);\r\n\r\n        uint256 m = players[playerId[msg.sender]].playerNum;\r\n\r\n        if(m != n)\r\n        {\r\n    \t\t    balance += msg.value;\r\n    \t\t    emit wol(0);\r\n        }\r\n        else\r\n        {\r\n            balance -= msg.value;\r\n            msg.sender.transfer(2*(msg.value));\r\n    \t\t    emit wol(1);\r\n        }\r\n    }\r\n\r\n    function donate() public payable \r\n    {\r\n        require (msg.value > 0);\r\n        balance += msg.value;\r\n    }\r\n\r\n    function takeMoney(uint toWithdraw) public onlyOwner returns(uint)\r\n    {\r\n        require(toWithdraw <= balance);\r\n        balance -= toWithdraw;\r\n        msg.sender.transfer(toWithdraw);\r\n    }\r\n}",
  "sourcePath": "C:/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/Flip.sol",
  "ast": {
    "absolutePath": "/C/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/Flip.sol",
    "exportedSymbols": {
      "Flip": [
        239
      ]
    },
    "id": 240,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/C/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 18,
        "nodeType": "ImportDirective",
        "scope": 240,
        "sourceUnit": 302,
        "src": "0:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/Destroyable.sol",
        "file": "./Destroyable.sol",
        "id": 19,
        "nodeType": "ImportDirective",
        "scope": 240,
        "sourceUnit": 17,
        "src": "25:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/provableAPI_0.5.sol",
        "file": "./provableAPI_0.5.sol",
        "id": 20,
        "nodeType": "ImportDirective",
        "scope": 240,
        "sourceUnit": 6598,
        "src": "54:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "89:24:1"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 301,
              "src": "134:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$301",
                "typeString": "contract Ownable"
              }
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "134:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24,
              "name": "Destroyable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16,
              "src": "143:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Destroyable_$16",
                "typeString": "contract Destroyable"
              }
            },
            "id": 25,
            "nodeType": "InheritanceSpecifier",
            "src": "143:11:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 26,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6597,
              "src": "156:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6597",
                "typeString": "contract usingProvable"
              }
            },
            "id": 27,
            "nodeType": "InheritanceSpecifier",
            "src": "156:13:1"
          }
        ],
        "contractDependencies": [
          16,
          301,
          6597
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 239,
        "linearizedBaseContracts": [
          239,
          6597,
          16,
          301
        ],
        "name": "Flip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 29,
            "name": "balance",
            "nodeType": "VariableDeclaration",
            "scope": 239,
            "src": "178:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "178:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 32,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "scope": 239,
            "src": "204:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "204:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "250:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Flip.Player",
            "id": 37,
            "members": [
              {
                "constant": false,
                "id": 34,
                "name": "playerNum",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "294:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 33,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "294:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "name": "waiting",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "322:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 35,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "322:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Player",
            "nodeType": "StructDefinition",
            "scope": 239,
            "src": "264:78:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 41,
            "name": "playerId",
            "nodeType": "VariableDeclaration",
            "scope": 239,
            "src": "350:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 40,
              "keyType": {
                "id": 38,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "359:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "350:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 39,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "370:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 45,
            "name": "players",
            "nodeType": "VariableDeclaration",
            "scope": 239,
            "src": "401:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Player_$37_storage_$",
              "typeString": "mapping(bytes32 => struct Flip.Player)"
            },
            "typeName": {
              "id": 44,
              "keyType": {
                "id": 42,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "410:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "401:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Player_$37_storage_$",
                "typeString": "mapping(bytes32 => struct Flip.Player)"
              },
              "valueType": {
                "contractScope": null,
                "id": 43,
                "name": "Player",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 37,
                "src": "421:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Player_$37_storage_ptr",
                  "typeString": "struct Flip.Player"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 49,
            "name": "wol",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "462:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "461:8:1"
            },
            "src": "452:18:1"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "504:27:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 52,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "515:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "515:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "515:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 56,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:2:1"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:1"
            },
            "scope": 239,
            "src": "478:53:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "633:244:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 66,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6612,
                            "src": "652:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "652:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 68,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4420,
                            "src": "666:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "666:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "652:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6615,
                        6616
                      ],
                      "referencedDeclaration": 6615,
                      "src": "644:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "644:43:1"
                },
                {
                  "assignments": [
                    74
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 100,
                      "src": "700:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "700:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 79,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "758:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 77,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6599,
                                  "src": "741:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 78,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "741:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "741:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 76,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "731:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "731:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "723:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "723:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "771:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "723:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "700:72:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 86,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "783:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Player_$37_storage_$",
                            "typeString": "mapping(bytes32 => struct Flip.Player storage ref)"
                          }
                        },
                        "id": 88,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "791:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "783:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$37_storage",
                          "typeString": "struct Flip.Player storage ref"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "playerNum",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "783:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "813:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "783:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "783:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 93,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "836:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Player_$37_storage_$",
                            "typeString": "mapping(bytes32 => struct Flip.Player storage ref)"
                          }
                        },
                        "id": 95,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 94,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "844:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "836:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$37_storage",
                          "typeString": "struct Flip.Player storage ref"
                        }
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "waiting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "836:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "864:5:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "836:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "836:33:1"
                }
              ]
            },
            "documentation": null,
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "559:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "577:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "600:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "558:62:1"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:0:1"
            },
            "scope": 239,
            "src": "539:338:1",
            "stateMutability": "nonpayable",
            "superFunction": 1350,
            "visibility": "public"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "923:363:1",
              "statements": [
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "scope": 134,
                      "src": "942:29:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 104,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "942:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 107,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "974:1:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "942:33:1"
                },
                {
                  "assignments": [
                    109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 109,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "scope": 134,
                      "src": "986:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 108,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "986:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 111,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1013:6:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "986:33:1"
                },
                {
                  "assignments": [
                    113
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 113,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 134,
                      "src": "1032:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 112,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1032:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 119,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 115,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1090:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1126:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1167:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 114,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5699,
                      "src": "1050:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1050:144:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1032:162:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 120,
                        "name": "playerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "1205:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 123,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6612,
                          "src": "1214:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1214:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1205:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "1228:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1205:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 127,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1247:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Player_$37_storage_$",
                            "typeString": "mapping(bytes32 => struct Flip.Player storage ref)"
                          }
                        },
                        "id": 129,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "1255:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1247:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$37_storage",
                          "typeString": "struct Flip.Player storage ref"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "waiting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "1247:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1274:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1247:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "900:2:1"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "923:0:1"
            },
            "scope": 239,
            "src": "885:401:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "1343:360:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 141,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6612,
                            "src": "1362:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1362:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "302e3031",
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1375:10:1",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          },
                          "value": "0.01"
                        },
                        "src": "1362:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6615,
                        6616
                      ],
                      "referencedDeclaration": 6615,
                      "src": "1354:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1354:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1354:32:1"
                },
                {
                  "assignments": [
                    148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 148,
                      "name": "m",
                      "nodeType": "VariableDeclaration",
                      "scope": 193,
                      "src": "1399:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 147,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1399:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 156,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1411:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Player_$37_storage_$",
                          "typeString": "mapping(bytes32 => struct Flip.Player storage ref)"
                        }
                      },
                      "id": 154,
                      "indexExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 150,
                          "name": "playerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1419:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                            "typeString": "mapping(address => bytes32)"
                          }
                        },
                        "id": 153,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 151,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6612,
                            "src": "1428:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1428:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1419:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1411:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$37_storage",
                        "typeString": "struct Flip.Player storage ref"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "playerNum",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34,
                    "src": "1411:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1399:51:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 157,
                      "name": "m",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "1466:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 158,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "1471:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1466:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 191,
                    "nodeType": "Block",
                    "src": "1576:120:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 170,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1591:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 171,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6612,
                              "src": "1602:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1602:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1591:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 174,
                        "nodeType": "ExpressionStatement",
                        "src": "1591:20:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1646:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 181,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6612,
                                      "src": "1649:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 182,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1649:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 183,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1648:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1646:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 175,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6612,
                                "src": "1626:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1626:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1626:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1626:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "1626:34:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1682:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 187,
                            "name": "wol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "1678:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1678:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 190,
                        "nodeType": "EmitStatement",
                        "src": "1673:11:1"
                      }
                    ]
                  },
                  "id": 192,
                  "nodeType": "IfStatement",
                  "src": "1463:233:1",
                  "trueBody": {
                    "id": 169,
                    "nodeType": "Block",
                    "src": "1483:69:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 160,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1496:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 161,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6612,
                              "src": "1507:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1507:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1496:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "1496:20:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1538:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 165,
                            "name": "wol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "1534:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1534:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 168,
                        "nodeType": "EmitStatement",
                        "src": "1529:11:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "coinFlip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "1312:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1311:11:1"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1343:0:1"
            },
            "scope": 239,
            "src": "1294:409:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "1750:73:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 198,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6612,
                            "src": "1770:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1770:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1782:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1770:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6615,
                        6616
                      ],
                      "referencedDeclaration": 6615,
                      "src": "1761:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 204,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1795:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6612,
                        "src": "1806:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1806:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1795:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "1795:20:1"
                }
              ]
            },
            "documentation": null,
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1726:2:1"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1750:0:1"
            },
            "scope": 239,
            "src": "1711:112:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 237,
              "nodeType": "Block",
              "src": "1903:123:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "toWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "1922:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 221,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1936:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1922:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6615,
                        6616
                      ],
                      "referencedDeclaration": 6615,
                      "src": "1914:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1914:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "1914:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 225,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1955:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 226,
                      "name": "toWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "1966:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1955:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:21:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "toWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "2007:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 229,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6612,
                          "src": "1987:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1987:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1987:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1987:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "1987:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 238,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 215,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 214,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 300,
                  "src": "1874:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1874:9:1"
              }
            ],
            "name": "takeMoney",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "name": "toWithdraw",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "1850:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1849:17:1"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "1892:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1891:6:1"
            },
            "scope": 239,
            "src": "1831:195:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 240,
        "src": "117:1912:1"
      }
    ],
    "src": "0:2029:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/Flip.sol",
    "exportedSymbols": {
      "Flip": [
        239
      ]
    },
    "id": 240,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/C/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 18,
        "nodeType": "ImportDirective",
        "scope": 240,
        "sourceUnit": 302,
        "src": "0:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/Destroyable.sol",
        "file": "./Destroyable.sol",
        "id": 19,
        "nodeType": "ImportDirective",
        "scope": 240,
        "sourceUnit": 17,
        "src": "25:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/User/Desktop/crypto/eth_project/My_first_project/Backend/contracts/provableAPI_0.5.sol",
        "file": "./provableAPI_0.5.sol",
        "id": 20,
        "nodeType": "ImportDirective",
        "scope": 240,
        "sourceUnit": 6598,
        "src": "54:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "89:24:1"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 301,
              "src": "134:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$301",
                "typeString": "contract Ownable"
              }
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "134:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24,
              "name": "Destroyable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16,
              "src": "143:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Destroyable_$16",
                "typeString": "contract Destroyable"
              }
            },
            "id": 25,
            "nodeType": "InheritanceSpecifier",
            "src": "143:11:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 26,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6597,
              "src": "156:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6597",
                "typeString": "contract usingProvable"
              }
            },
            "id": 27,
            "nodeType": "InheritanceSpecifier",
            "src": "156:13:1"
          }
        ],
        "contractDependencies": [
          16,
          301,
          6597
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 239,
        "linearizedBaseContracts": [
          239,
          6597,
          16,
          301
        ],
        "name": "Flip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 29,
            "name": "balance",
            "nodeType": "VariableDeclaration",
            "scope": 239,
            "src": "178:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "178:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 32,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "scope": 239,
            "src": "204:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "204:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "250:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Flip.Player",
            "id": 37,
            "members": [
              {
                "constant": false,
                "id": 34,
                "name": "playerNum",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "294:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 33,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "294:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "name": "waiting",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "322:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 35,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "322:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Player",
            "nodeType": "StructDefinition",
            "scope": 239,
            "src": "264:78:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 41,
            "name": "playerId",
            "nodeType": "VariableDeclaration",
            "scope": 239,
            "src": "350:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 40,
              "keyType": {
                "id": 38,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "359:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "350:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 39,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "370:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 45,
            "name": "players",
            "nodeType": "VariableDeclaration",
            "scope": 239,
            "src": "401:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Player_$37_storage_$",
              "typeString": "mapping(bytes32 => struct Flip.Player)"
            },
            "typeName": {
              "id": 44,
              "keyType": {
                "id": 42,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "410:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "401:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Player_$37_storage_$",
                "typeString": "mapping(bytes32 => struct Flip.Player)"
              },
              "valueType": {
                "contractScope": null,
                "id": 43,
                "name": "Player",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 37,
                "src": "421:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Player_$37_storage_ptr",
                  "typeString": "struct Flip.Player"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 49,
            "name": "wol",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "462:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "461:8:1"
            },
            "src": "452:18:1"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "504:27:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 52,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "515:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "515:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "515:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 56,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:2:1"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:1"
            },
            "scope": 239,
            "src": "478:53:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "633:244:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 66,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6612,
                            "src": "652:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "652:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 68,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4420,
                            "src": "666:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "666:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "652:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6615,
                        6616
                      ],
                      "referencedDeclaration": 6615,
                      "src": "644:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "644:43:1"
                },
                {
                  "assignments": [
                    74
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 100,
                      "src": "700:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "700:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 79,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "758:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 77,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6599,
                                  "src": "741:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 78,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "741:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "741:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 76,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "731:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "731:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "723:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "723:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "771:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "723:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "700:72:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 86,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "783:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Player_$37_storage_$",
                            "typeString": "mapping(bytes32 => struct Flip.Player storage ref)"
                          }
                        },
                        "id": 88,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "791:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "783:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$37_storage",
                          "typeString": "struct Flip.Player storage ref"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "playerNum",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "783:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "813:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "783:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "783:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 93,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "836:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Player_$37_storage_$",
                            "typeString": "mapping(bytes32 => struct Flip.Player storage ref)"
                          }
                        },
                        "id": 95,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 94,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "844:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "836:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$37_storage",
                          "typeString": "struct Flip.Player storage ref"
                        }
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "waiting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "836:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "864:5:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "836:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "836:33:1"
                }
              ]
            },
            "documentation": null,
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "559:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "577:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "600:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "558:62:1"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:0:1"
            },
            "scope": 239,
            "src": "539:338:1",
            "stateMutability": "nonpayable",
            "superFunction": 1350,
            "visibility": "public"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "923:363:1",
              "statements": [
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "scope": 134,
                      "src": "942:29:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 104,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "942:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 107,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "974:1:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "942:33:1"
                },
                {
                  "assignments": [
                    109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 109,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "scope": 134,
                      "src": "986:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 108,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "986:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 111,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1013:6:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "986:33:1"
                },
                {
                  "assignments": [
                    113
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 113,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 134,
                      "src": "1032:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 112,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1032:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 119,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 115,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1090:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1126:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1167:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 114,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5699,
                      "src": "1050:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1050:144:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1032:162:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 120,
                        "name": "playerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "1205:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 123,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6612,
                          "src": "1214:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1214:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1205:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "1228:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1205:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 127,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1247:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Player_$37_storage_$",
                            "typeString": "mapping(bytes32 => struct Flip.Player storage ref)"
                          }
                        },
                        "id": 129,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "1255:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1247:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$37_storage",
                          "typeString": "struct Flip.Player storage ref"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "waiting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "1247:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1274:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1247:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "900:2:1"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "923:0:1"
            },
            "scope": 239,
            "src": "885:401:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "1343:360:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 141,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6612,
                            "src": "1362:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1362:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "302e3031",
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1375:10:1",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          },
                          "value": "0.01"
                        },
                        "src": "1362:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6615,
                        6616
                      ],
                      "referencedDeclaration": 6615,
                      "src": "1354:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1354:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1354:32:1"
                },
                {
                  "assignments": [
                    148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 148,
                      "name": "m",
                      "nodeType": "VariableDeclaration",
                      "scope": 193,
                      "src": "1399:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 147,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1399:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 156,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1411:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Player_$37_storage_$",
                          "typeString": "mapping(bytes32 => struct Flip.Player storage ref)"
                        }
                      },
                      "id": 154,
                      "indexExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 150,
                          "name": "playerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1419:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                            "typeString": "mapping(address => bytes32)"
                          }
                        },
                        "id": 153,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 151,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6612,
                            "src": "1428:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1428:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1419:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1411:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$37_storage",
                        "typeString": "struct Flip.Player storage ref"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "playerNum",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34,
                    "src": "1411:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1399:51:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 157,
                      "name": "m",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "1466:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 158,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "1471:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1466:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 191,
                    "nodeType": "Block",
                    "src": "1576:120:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 170,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1591:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 171,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6612,
                              "src": "1602:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1602:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1591:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 174,
                        "nodeType": "ExpressionStatement",
                        "src": "1591:20:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1646:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 181,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6612,
                                      "src": "1649:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 182,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1649:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 183,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1648:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1646:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 175,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6612,
                                "src": "1626:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1626:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1626:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1626:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "1626:34:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1682:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 187,
                            "name": "wol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "1678:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1678:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 190,
                        "nodeType": "EmitStatement",
                        "src": "1673:11:1"
                      }
                    ]
                  },
                  "id": 192,
                  "nodeType": "IfStatement",
                  "src": "1463:233:1",
                  "trueBody": {
                    "id": 169,
                    "nodeType": "Block",
                    "src": "1483:69:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 160,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1496:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 161,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6612,
                              "src": "1507:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1507:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1496:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "1496:20:1"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1538:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 165,
                            "name": "wol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "1534:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1534:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 168,
                        "nodeType": "EmitStatement",
                        "src": "1529:11:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "coinFlip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "1312:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1311:11:1"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1343:0:1"
            },
            "scope": 239,
            "src": "1294:409:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "1750:73:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 198,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6612,
                            "src": "1770:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1770:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1782:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1770:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6615,
                        6616
                      ],
                      "referencedDeclaration": 6615,
                      "src": "1761:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 204,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1795:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6612,
                        "src": "1806:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1806:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1795:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "1795:20:1"
                }
              ]
            },
            "documentation": null,
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1726:2:1"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1750:0:1"
            },
            "scope": 239,
            "src": "1711:112:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 237,
              "nodeType": "Block",
              "src": "1903:123:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "toWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 212,
                          "src": "1922:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 221,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1936:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1922:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6615,
                        6616
                      ],
                      "referencedDeclaration": 6615,
                      "src": "1914:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1914:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "1914:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 225,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1955:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 226,
                      "name": "toWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "1966:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1955:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:21:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "toWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "2007:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 229,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6612,
                          "src": "1987:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1987:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1987:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1987:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "1987:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 238,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 215,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 214,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 300,
                  "src": "1874:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1874:9:1"
              }
            ],
            "name": "takeMoney",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "name": "toWithdraw",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "1850:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1849:17:1"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "1892:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1891:6:1"
            },
            "scope": 239,
            "src": "1831:195:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 240,
        "src": "117:1912:1"
      }
    ],
    "src": "0:2029:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x6c266973f0276ca4d3f264805b67a57f592cd3cd18bbbce29685ef3c130aff13": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "n",
              "type": "uint256"
            }
          ],
          "name": "wol",
          "type": "event"
        },
        "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "name": "LogNewProvableQuery",
          "type": "event"
        },
        "0x71a2b2914bcf3e457302bc210ccee75c6a4ed440d1ee48453f1c30922ed82944": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "randomNumber",
              "type": "uint256"
            }
          ],
          "name": "generatedNumber",
          "type": "event"
        },
        "0xa84cf3bcfb7e6801f82299edcf6aa858258511d4443e4af0882411236e318ab4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "randomNumber",
              "type": "uint256"
            }
          ],
          "name": "generatedNumber1",
          "type": "event"
        },
        "0x1e59d74c44b9fa633804de888473077c153d9a1197570ad078da91aefbdfda3b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "queryId",
              "type": "bytes32"
            }
          ],
          "name": "id",
          "type": "event"
        },
        "0xb212c8921883707806054134691af4baf7a0b0821e5e930788fe27f6bdfb2068": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "sender",
          "type": "event"
        },
        "0xe08a4049bd8e08334b0929080368bb9136bda1bb6c236514e2ec5e3e5546a2c5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bool",
              "name": "n",
              "type": "bool"
            }
          ],
          "name": "waitingStatus",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x4C4ee6918836A36849802E896205e345D0584c30",
      "transactionHash": "0xb98f3cc94b8639e15caa37332286850499a4265704557d292ef3e455c7a8b288"
    },
    "42": {
      "events": {
        "0xc4dc360d0a9c0677a3379ae0a3d81e887f761e65fdf3d7e00859d1bcd3c47389": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "name": "LogNewProvableQuery",
          "type": "event"
        },
        "0x71a2b2914bcf3e457302bc210ccee75c6a4ed440d1ee48453f1c30922ed82944": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "randomNumber",
              "type": "uint256"
            }
          ],
          "name": "generatedNumber",
          "type": "event"
        },
        "0x6c266973f0276ca4d3f264805b67a57f592cd3cd18bbbce29685ef3c130aff13": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "n",
              "type": "uint256"
            }
          ],
          "name": "wol",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xfaf0f391819F7baD07516D26b81925af9F7c0CfC",
      "transactionHash": "0x39efa9b23be6fe9ce5b2a6a7da69cf96bd46d03ff4eca444ec56402a3bafc048"
    },
    "5777": {
      "events": {
        "0xeac46c267f41c6dfbd79484730f70788e670799194f5711ef47eba57a81e5a55": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "name": "balanceUpdated",
          "type": "event"
        },
        "0x6c266973f0276ca4d3f264805b67a57f592cd3cd18bbbce29685ef3c130aff13": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "n",
              "type": "uint256"
            }
          ],
          "name": "wol",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x53FE3BF5E3978BC56267cc3228AD25deF64EA217",
      "transactionHash": "0x4adad1d696ad092a94f6c9a205b39d6f5f5078cb6d55ca647862d128aeaa67c8"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-26T09:47:16.233Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}